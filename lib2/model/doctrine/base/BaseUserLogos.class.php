<?php

/**
 * BaseUserLogos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_logo_id
 * @property string $title
 * @property string $file
 * @property boolean $is_active
 * 
 * @method integer   getUserLogoId()   Returns the current record's "user_logo_id" value
 * @method string    getTitle()        Returns the current record's "title" value
 * @method string    getFile()         Returns the current record's "file" value
 * @method boolean   getIsActive()     Returns the current record's "is_active" value
 * @method UserLogos setUserLogoId()   Sets the current record's "user_logo_id" value
 * @method UserLogos setTitle()        Sets the current record's "title" value
 * @method UserLogos setFile()         Sets the current record's "file" value
 * @method UserLogos setIsActive()     Sets the current record's "is_active" value
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserLogos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_user_logos');
        $this->hasColumn('user_logo_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('title', 'string', 512, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Krótki tekst',
             'length' => 512,
             ));
        $this->hasColumn('file', 'string', 512, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 512,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}