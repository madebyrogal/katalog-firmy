<?php

/**
 * BaseCurrency
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $currency_id
 * @property string $name
 * @property string $symbol
 * @property string $language
 * @property boolean $is_active
 * @property boolean $is_default
 * @property float $rate
 * 
 * @method integer  getCurrencyId()  Returns the current record's "currency_id" value
 * @method string   getName()        Returns the current record's "name" value
 * @method string   getSymbol()      Returns the current record's "symbol" value
 * @method string   getLanguage()    Returns the current record's "language" value
 * @method boolean  getIsActive()    Returns the current record's "is_active" value
 * @method boolean  getIsDefault()   Returns the current record's "is_default" value
 * @method float    getRate()        Returns the current record's "rate" value
 * @method Currency setCurrencyId()  Sets the current record's "currency_id" value
 * @method Currency setName()        Sets the current record's "name" value
 * @method Currency setSymbol()      Sets the current record's "symbol" value
 * @method Currency setLanguage()    Sets the current record's "language" value
 * @method Currency setIsActive()    Sets the current record's "is_active" value
 * @method Currency setIsDefault()   Sets the current record's "is_default" value
 * @method Currency setRate()        Sets the current record's "rate" value
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCurrency extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_currency');
        $this->hasColumn('currency_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('symbol', 'string', 15, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 15,
             ));
        $this->hasColumn('language', 'string', 15, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'pl',
             'length' => 15,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('is_default', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('rate', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}