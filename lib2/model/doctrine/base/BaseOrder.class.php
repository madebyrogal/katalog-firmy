<?php

/**
 * BaseOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $uid
 * @property integer $profile_id
 * @property integer $company_id
 * @property string $status_id
 * @property clob $note
 * @property integer $invoice_id
 * @property integer $value_netto
 * @property integer $value_brutto
 * @property timestamp $rent_from
 * @property timestamp $rent_to
 * @property boolean $is_paid
 * @property integer $packet
 * @property Status $Status
 * @property Company $Company
 * @property Profile $Profile
 * @property Invoice $Invoice
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method string    getUid()          Returns the current record's "uid" value
 * @method integer   getProfileId()    Returns the current record's "profile_id" value
 * @method integer   getCompanyId()    Returns the current record's "company_id" value
 * @method string    getStatusId()     Returns the current record's "status_id" value
 * @method clob      getNote()         Returns the current record's "note" value
 * @method integer   getInvoiceId()    Returns the current record's "invoice_id" value
 * @method integer   getValueNetto()   Returns the current record's "value_netto" value
 * @method integer   getValueBrutto()  Returns the current record's "value_brutto" value
 * @method timestamp getRentFrom()     Returns the current record's "rent_from" value
 * @method timestamp getRentTo()       Returns the current record's "rent_to" value
 * @method boolean   getIsPaid()       Returns the current record's "is_paid" value
 * @method integer   getPacket()       Returns the current record's "packet" value
 * @method Status    getStatus()       Returns the current record's "Status" value
 * @method Company   getCompany()      Returns the current record's "Company" value
 * @method Profile   getProfile()      Returns the current record's "Profile" value
 * @method Invoice   getInvoice()      Returns the current record's "Invoice" value
 * @method Order     setId()           Sets the current record's "id" value
 * @method Order     setUid()          Sets the current record's "uid" value
 * @method Order     setProfileId()    Sets the current record's "profile_id" value
 * @method Order     setCompanyId()    Sets the current record's "company_id" value
 * @method Order     setStatusId()     Sets the current record's "status_id" value
 * @method Order     setNote()         Sets the current record's "note" value
 * @method Order     setInvoiceId()    Sets the current record's "invoice_id" value
 * @method Order     setValueNetto()   Sets the current record's "value_netto" value
 * @method Order     setValueBrutto()  Sets the current record's "value_brutto" value
 * @method Order     setRentFrom()     Sets the current record's "rent_from" value
 * @method Order     setRentTo()       Sets the current record's "rent_to" value
 * @method Order     setIsPaid()       Sets the current record's "is_paid" value
 * @method Order     setPacket()       Sets the current record's "packet" value
 * @method Order     setStatus()       Sets the current record's "Status" value
 * @method Order     setCompany()      Sets the current record's "Company" value
 * @method Order     setProfile()      Sets the current record's "Profile" value
 * @method Order     setInvoice()      Sets the current record's "Invoice" value
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_order');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('uid', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('profile_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('company_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('note', 'clob', 65532, array(
             'type' => 'clob',
             'notnull' => false,
             'length' => 65532,
             ));
        $this->hasColumn('invoice_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('value_netto', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('value_brutto', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('rent_from', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('rent_to', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('is_paid', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('packet', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 2,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Status', array(
             'local' => 'status_id',
             'foreign' => 'id',
             'onDelete' => 'NO ACTION'));

        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Profile', array(
             'local' => 'profile_id',
             'foreign' => 'id',
             'onDelete' => 'NO ACTION'));

        $this->hasOne('Invoice', array(
             'local' => 'invoice_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $versionable0 = new Doctrine_Template_Versionable(array(
             'versionColumn' => 'version',
             'className' => '%CLASS%Version',
             'auditLog' => true,
             'tableName' => 'of_order_version',
             ));
        $this->actAs($timestampable0);
        $this->actAs($versionable0);
    }
}