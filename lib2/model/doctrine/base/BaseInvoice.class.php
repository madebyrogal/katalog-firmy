<?php

/**
 * BaseInvoice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property timestamp $sell_by_date
 * @property timestamp $invoice_date
 * @property string $place_of_issue
 * @property string $seller
 * @property string $buyer
 * @property string $service_name
 * @property string $net
 * @property string $gross_value
 * @property string $vat
 * @property string $total_price
 * @property string $vat_rate
 * @property string $vat_amount
 * @property string $words
 * @property string $paid_by_bank_transfer
 * @property string $exhibited
 * @property string $received
 * @property Doctrine_Collection $Order
 * 
 * @method integer             getId()                    Returns the current record's "id" value
 * @method timestamp           getSellByDate()            Returns the current record's "sell_by_date" value
 * @method timestamp           getInvoiceDate()           Returns the current record's "invoice_date" value
 * @method string              getPlaceOfIssue()          Returns the current record's "place_of_issue" value
 * @method string              getSeller()                Returns the current record's "seller" value
 * @method string              getBuyer()                 Returns the current record's "buyer" value
 * @method string              getServiceName()           Returns the current record's "service_name" value
 * @method string              getNet()                   Returns the current record's "net" value
 * @method string              getGrossValue()            Returns the current record's "gross_value" value
 * @method string              getVat()                   Returns the current record's "vat" value
 * @method string              getTotalPrice()            Returns the current record's "total_price" value
 * @method string              getVatRate()               Returns the current record's "vat_rate" value
 * @method string              getVatAmount()             Returns the current record's "vat_amount" value
 * @method string              getWords()                 Returns the current record's "words" value
 * @method string              getPaidByBankTransfer()    Returns the current record's "paid_by_bank_transfer" value
 * @method string              getExhibited()             Returns the current record's "exhibited" value
 * @method string              getReceived()              Returns the current record's "received" value
 * @method Doctrine_Collection getOrder()                 Returns the current record's "Order" collection
 * @method Invoice             setId()                    Sets the current record's "id" value
 * @method Invoice             setSellByDate()            Sets the current record's "sell_by_date" value
 * @method Invoice             setInvoiceDate()           Sets the current record's "invoice_date" value
 * @method Invoice             setPlaceOfIssue()          Sets the current record's "place_of_issue" value
 * @method Invoice             setSeller()                Sets the current record's "seller" value
 * @method Invoice             setBuyer()                 Sets the current record's "buyer" value
 * @method Invoice             setServiceName()           Sets the current record's "service_name" value
 * @method Invoice             setNet()                   Sets the current record's "net" value
 * @method Invoice             setGrossValue()            Sets the current record's "gross_value" value
 * @method Invoice             setVat()                   Sets the current record's "vat" value
 * @method Invoice             setTotalPrice()            Sets the current record's "total_price" value
 * @method Invoice             setVatRate()               Sets the current record's "vat_rate" value
 * @method Invoice             setVatAmount()             Sets the current record's "vat_amount" value
 * @method Invoice             setWords()                 Sets the current record's "words" value
 * @method Invoice             setPaidByBankTransfer()    Sets the current record's "paid_by_bank_transfer" value
 * @method Invoice             setExhibited()             Sets the current record's "exhibited" value
 * @method Invoice             setReceived()              Sets the current record's "received" value
 * @method Invoice             setOrder()                 Sets the current record's "Order" collection
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvoice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_invoice');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('sell_by_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('invoice_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('place_of_issue', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('seller', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('buyer', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('service_name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('net', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('gross_value', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('vat', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('total_price', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('vat_rate', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('vat_amount', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('words', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('paid_by_bank_transfer', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('exhibited', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));
        $this->hasColumn('received', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'FALSE',
             'length' => '',
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Order', array(
             'local' => 'id',
             'foreign' => 'invoice_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}