<?php

/**
 * BaseArticles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $article_id
 * @property integer $author_id
 * @property integer $artcategory_id
 * @property string $title
 * @property clob $content
 * @property boolean $is_public
 * @property boolean $is_deletable
 * @property boolean $is_editable
 * @property integer $meta_id
 * @property boolean $is_lang_active
 * @property string $record_key
 * @property ArtCategories $ArtCategories
 * @property Doctrine_Collection $ExtraArtCategories
 * @property Doctrine_Collection $ArticlesVersion
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Galleries
 * @property Doctrine_Collection $Comments
 * @property Metas $Metas
 * @property Doctrine_Collection $Files
 * @property Doctrine_Collection $Tags
 * @property Doctrine_Collection $ArticleCustomFields
 * @property Doctrine_Collection $ArticleGallery
 * @property Doctrine_Collection $ArticleFile
 * @property Doctrine_Collection $ArticleComment
 * @property Doctrine_Collection $Articles2Articles
 * @property Doctrine_Collection $Article2Tag
 * @property Doctrine_Collection $ArticleCustomFieldValue
 * @property Doctrine_Collection $Articles2ArtCategories
 * 
 * @method integer             getArticleId()               Returns the current record's "article_id" value
 * @method integer             getAuthorId()                Returns the current record's "author_id" value
 * @method integer             getArtcategoryId()           Returns the current record's "artcategory_id" value
 * @method string              getTitle()                   Returns the current record's "title" value
 * @method clob                getContent()                 Returns the current record's "content" value
 * @method boolean             getIsPublic()                Returns the current record's "is_public" value
 * @method boolean             getIsDeletable()             Returns the current record's "is_deletable" value
 * @method boolean             getIsEditable()              Returns the current record's "is_editable" value
 * @method integer             getMetaId()                  Returns the current record's "meta_id" value
 * @method boolean             getIsLangActive()            Returns the current record's "is_lang_active" value
 * @method string              getRecordKey()               Returns the current record's "record_key" value
 * @method ArtCategories       getArtCategories()           Returns the current record's "ArtCategories" value
 * @method Doctrine_Collection getExtraArtCategories()      Returns the current record's "ExtraArtCategories" collection
 * @method Doctrine_Collection getArticlesVersion()         Returns the current record's "ArticlesVersion" collection
 * @method sfGuardUser         getSfGuardUser()             Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getGalleries()               Returns the current record's "Galleries" collection
 * @method Doctrine_Collection getComments()                Returns the current record's "Comments" collection
 * @method Metas               getMetas()                   Returns the current record's "Metas" value
 * @method Doctrine_Collection getFiles()                   Returns the current record's "Files" collection
 * @method Doctrine_Collection getTags()                    Returns the current record's "Tags" collection
 * @method Doctrine_Collection getArticleCustomFields()     Returns the current record's "ArticleCustomFields" collection
 * @method Doctrine_Collection getArticleGallery()          Returns the current record's "ArticleGallery" collection
 * @method Doctrine_Collection getArticleFile()             Returns the current record's "ArticleFile" collection
 * @method Doctrine_Collection getArticleComment()          Returns the current record's "ArticleComment" collection
 * @method Doctrine_Collection getArticles2Articles()       Returns the current record's "Articles2Articles" collection
 * @method Doctrine_Collection getArticle2Tag()             Returns the current record's "Article2Tag" collection
 * @method Doctrine_Collection getArticleCustomFieldValue() Returns the current record's "ArticleCustomFieldValue" collection
 * @method Doctrine_Collection getArticles2ArtCategories()  Returns the current record's "Articles2ArtCategories" collection
 * @method Articles            setArticleId()               Sets the current record's "article_id" value
 * @method Articles            setAuthorId()                Sets the current record's "author_id" value
 * @method Articles            setArtcategoryId()           Sets the current record's "artcategory_id" value
 * @method Articles            setTitle()                   Sets the current record's "title" value
 * @method Articles            setContent()                 Sets the current record's "content" value
 * @method Articles            setIsPublic()                Sets the current record's "is_public" value
 * @method Articles            setIsDeletable()             Sets the current record's "is_deletable" value
 * @method Articles            setIsEditable()              Sets the current record's "is_editable" value
 * @method Articles            setMetaId()                  Sets the current record's "meta_id" value
 * @method Articles            setIsLangActive()            Sets the current record's "is_lang_active" value
 * @method Articles            setRecordKey()               Sets the current record's "record_key" value
 * @method Articles            setArtCategories()           Sets the current record's "ArtCategories" value
 * @method Articles            setExtraArtCategories()      Sets the current record's "ExtraArtCategories" collection
 * @method Articles            setArticlesVersion()         Sets the current record's "ArticlesVersion" collection
 * @method Articles            setSfGuardUser()             Sets the current record's "sfGuardUser" value
 * @method Articles            setGalleries()               Sets the current record's "Galleries" collection
 * @method Articles            setComments()                Sets the current record's "Comments" collection
 * @method Articles            setMetas()                   Sets the current record's "Metas" value
 * @method Articles            setFiles()                   Sets the current record's "Files" collection
 * @method Articles            setTags()                    Sets the current record's "Tags" collection
 * @method Articles            setArticleCustomFields()     Sets the current record's "ArticleCustomFields" collection
 * @method Articles            setArticleGallery()          Sets the current record's "ArticleGallery" collection
 * @method Articles            setArticleFile()             Sets the current record's "ArticleFile" collection
 * @method Articles            setArticleComment()          Sets the current record's "ArticleComment" collection
 * @method Articles            setArticles2Articles()       Sets the current record's "Articles2Articles" collection
 * @method Articles            setArticle2Tag()             Sets the current record's "Article2Tag" collection
 * @method Articles            setArticleCustomFieldValue() Sets the current record's "ArticleCustomFieldValue" collection
 * @method Articles            setArticles2ArtCategories()  Sets the current record's "Articles2ArtCategories" collection
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticles extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_articles');
        $this->hasColumn('article_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('artcategory_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Nazwa/Tytuł',
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', 65532, array(
             'type' => 'clob',
             'notnull' => true,
             'default' => '<p></p>',
             'length' => 65532,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('is_deletable', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('is_editable', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('meta_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('is_lang_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('record_key', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'unique' => false,
             'length' => 255,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ArtCategories', array(
             'local' => 'artcategory_id',
             'foreign' => 'artcategory_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ArtCategories as ExtraArtCategories', array(
             'refClass' => 'Articles2ArtCategories',
             'local' => 'article_id',
             'foreign' => 'artcategory_id'));

        $this->hasMany('ArticlesVersion', array(
             'local' => 'article_id',
             'foreign' => 'article_id'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'author_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Galleries', array(
             'refClass' => 'ArticleGallery',
             'local' => 'article_id',
             'foreign' => 'gallery_id'));

        $this->hasMany('Comments', array(
             'refClass' => 'CommentArticle',
             'local' => 'article_id',
             'foreign' => 'comment_id'));

        $this->hasOne('Metas', array(
             'local' => 'meta_id',
             'foreign' => 'meta_id'));

        $this->hasMany('Files', array(
             'refClass' => 'ArticleFile',
             'local' => 'article_id',
             'foreign' => 'file_id'));

        $this->hasMany('Tag as Tags', array(
             'refClass' => 'Article2Tag',
             'local' => 'article_id',
             'foreign' => 'tag_id'));

        $this->hasMany('ArticleCustomField as ArticleCustomFields', array(
             'refClass' => 'ArticleCustomFieldValue',
             'local' => 'article_id',
             'foreign' => 'id'));

        $this->hasMany('ArticleGallery', array(
             'local' => 'article_id',
             'foreign' => 'article_id'));

        $this->hasMany('ArticleFile', array(
             'local' => 'article_id',
             'foreign' => 'article_id'));

        $this->hasMany('CommentArticle as ArticleComment', array(
             'local' => 'article_id',
             'foreign' => 'article_id'));

        $this->hasMany('Articles2Articles', array(
             'local' => 'article_id',
             'foreign' => 'article_1_id'));

        $this->hasMany('Article2Tag', array(
             'local' => 'article_id',
             'foreign' => 'article_id'));

        $this->hasMany('ArticleCustomFieldValue', array(
             'local' => 'article_id',
             'foreign' => 'article_id'));

        $this->hasMany('Articles2ArtCategories', array(
             'local' => 'article_id',
             'foreign' => 'article_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'tableName' => 'of_articles_translation',
             'fields' => 
             array(
              0 => 'title',
              1 => 'content',
              2 => 'is_lang_active',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'unique' => true,
             'canUpdate' => true,
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'title',
             ),
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}