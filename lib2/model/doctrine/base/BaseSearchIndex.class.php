<?php

/**
 * BaseSearchIndex
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $model
 * @property integer $model_id
 * @property string $keyword
 * @property string $lang
 * 
 * @method integer     getId()       Returns the current record's "id" value
 * @method string      getModel()    Returns the current record's "model" value
 * @method integer     getModelId()  Returns the current record's "model_id" value
 * @method string      getKeyword()  Returns the current record's "keyword" value
 * @method string      getLang()     Returns the current record's "lang" value
 * @method SearchIndex setId()       Sets the current record's "id" value
 * @method SearchIndex setModel()    Sets the current record's "model" value
 * @method SearchIndex setModelId()  Sets the current record's "model_id" value
 * @method SearchIndex setKeyword()  Sets the current record's "keyword" value
 * @method SearchIndex setLang()     Sets the current record's "lang" value
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSearchIndex extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_search_index');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('model', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('model_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('keyword', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('lang', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}