<?php

/**
 * BaseTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $record_key
 * @property string $lang
 * @property Doctrine_Collection $Articles
 * @property Doctrine_Collection $Article2Tag
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getRecordKey()   Returns the current record's "record_key" value
 * @method string              getLang()        Returns the current record's "lang" value
 * @method Doctrine_Collection getArticles()    Returns the current record's "Articles" collection
 * @method Doctrine_Collection getArticle2Tag() Returns the current record's "Article2Tag" collection
 * @method Tag                 setName()        Sets the current record's "name" value
 * @method Tag                 setRecordKey()   Sets the current record's "record_key" value
 * @method Tag                 setLang()        Sets the current record's "lang" value
 * @method Tag                 setArticles()    Sets the current record's "Articles" collection
 * @method Tag                 setArticle2Tag() Sets the current record's "Article2Tag" collection
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_tag');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('record_key', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'unique' => false,
             'length' => 255,
             ));
        $this->hasColumn('lang', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'default' => 'pl',
             'length' => 255,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Articles', array(
             'refClass' => 'Article2Tag',
             'local' => 'tag_id',
             'foreign' => 'article_id'));

        $this->hasMany('Article2Tag', array(
             'local' => 'id',
             'foreign' => 'tag_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'unique' => true,
             'canUpdate' => true,
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'name',
             ),
             ));
        $this->actAs($sluggable0);
    }
}