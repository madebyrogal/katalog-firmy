<?php

/**
 * BaseThemes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property boolean $is_active
 * @property date $creation_date
 * @property string $author
 * @property string $author_email
 * @property string $author_url
 * @property string $copyright
 * @property string $version
 * @property clob $description
 * 
 * @method integer getId()            Returns the current record's "id" value
 * @method string  getName()          Returns the current record's "name" value
 * @method boolean getIsActive()      Returns the current record's "is_active" value
 * @method date    getCreationDate()  Returns the current record's "creation_date" value
 * @method string  getAuthor()        Returns the current record's "author" value
 * @method string  getAuthorEmail()   Returns the current record's "author_email" value
 * @method string  getAuthorUrl()     Returns the current record's "author_url" value
 * @method string  getCopyright()     Returns the current record's "copyright" value
 * @method string  getVersion()       Returns the current record's "version" value
 * @method clob    getDescription()   Returns the current record's "description" value
 * @method Themes  setId()            Sets the current record's "id" value
 * @method Themes  setName()          Sets the current record's "name" value
 * @method Themes  setIsActive()      Sets the current record's "is_active" value
 * @method Themes  setCreationDate()  Sets the current record's "creation_date" value
 * @method Themes  setAuthor()        Sets the current record's "author" value
 * @method Themes  setAuthorEmail()   Sets the current record's "author_email" value
 * @method Themes  setAuthorUrl()     Sets the current record's "author_url" value
 * @method Themes  setCopyright()     Sets the current record's "copyright" value
 * @method Themes  setVersion()       Sets the current record's "version" value
 * @method Themes  setDescription()   Sets the current record's "description" value
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseThemes extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_themes');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('creation_date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('author', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('author_email', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('author_url', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('copyright', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('version', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('description', 'clob', 255, array(
             'type' => 'clob',
             'notnull' => false,
             'length' => 255,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}