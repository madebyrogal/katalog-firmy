<?php

/**
 * BaseArticlesVersion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $article_version_id
 * @property integer $article_id
 * @property integer $author_id
 * @property integer $artcategory_id
 * @property string $title
 * @property clob $content
 * @property boolean $is_active
 * @property boolean $is_lang_active
 * @property Articles $Articles
 * 
 * @method integer         getArticleVersionId()   Returns the current record's "article_version_id" value
 * @method integer         getArticleId()          Returns the current record's "article_id" value
 * @method integer         getAuthorId()           Returns the current record's "author_id" value
 * @method integer         getArtcategoryId()      Returns the current record's "artcategory_id" value
 * @method string          getTitle()              Returns the current record's "title" value
 * @method clob            getContent()            Returns the current record's "content" value
 * @method boolean         getIsActive()           Returns the current record's "is_active" value
 * @method boolean         getIsLangActive()       Returns the current record's "is_lang_active" value
 * @method Articles        getArticles()           Returns the current record's "Articles" value
 * @method ArticlesVersion setArticleVersionId()   Sets the current record's "article_version_id" value
 * @method ArticlesVersion setArticleId()          Sets the current record's "article_id" value
 * @method ArticlesVersion setAuthorId()           Sets the current record's "author_id" value
 * @method ArticlesVersion setArtcategoryId()      Sets the current record's "artcategory_id" value
 * @method ArticlesVersion setTitle()              Sets the current record's "title" value
 * @method ArticlesVersion setContent()            Sets the current record's "content" value
 * @method ArticlesVersion setIsActive()           Sets the current record's "is_active" value
 * @method ArticlesVersion setIsLangActive()       Sets the current record's "is_lang_active" value
 * @method ArticlesVersion setArticles()           Sets the current record's "Articles" value
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticlesVersion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_articles_version');
        $this->hasColumn('article_version_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('article_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('artcategory_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Nazwa/Tytuł',
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', 65532, array(
             'type' => 'clob',
             'notnull' => true,
             'default' => '<p></p>',
             'length' => 65532,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('is_lang_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Articles', array(
             'local' => 'article_id',
             'foreign' => 'article_id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'tableName' => 'of_articles_version_translation',
             'fields' => 
             array(
              0 => 'title',
              1 => 'content',
              2 => 'is_lang_active',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'unique' => true,
             'canUpdate' => true,
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'title',
             ),
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}