<?php

/**
 * BaseMetas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $meta_id
 * @property boolean $is_default
 * @property boolean $generate
 * @property string $title
 * @property string $description
 * @property string $keywords
 * @property string $copyright
 * @property string $author
 * @property string $email
 * @property string $distribution
 * @property string $rating
 * @property string $robots
 * @property string $revisitafter
 * @property string $expires
 * @property Doctrine_Collection $ArtCategories
 * @property Doctrine_Collection $Articles
 * @property Doctrine_Collection $Galleries
 * @property Doctrine_Collection $Category
 * @property Doctrine_Collection $Company
 * 
 * @method integer             getMetaId()        Returns the current record's "meta_id" value
 * @method boolean             getIsDefault()     Returns the current record's "is_default" value
 * @method boolean             getGenerate()      Returns the current record's "generate" value
 * @method string              getTitle()         Returns the current record's "title" value
 * @method string              getDescription()   Returns the current record's "description" value
 * @method string              getKeywords()      Returns the current record's "keywords" value
 * @method string              getCopyright()     Returns the current record's "copyright" value
 * @method string              getAuthor()        Returns the current record's "author" value
 * @method string              getEmail()         Returns the current record's "email" value
 * @method string              getDistribution()  Returns the current record's "distribution" value
 * @method string              getRating()        Returns the current record's "rating" value
 * @method string              getRobots()        Returns the current record's "robots" value
 * @method string              getRevisitafter()  Returns the current record's "revisitafter" value
 * @method string              getExpires()       Returns the current record's "expires" value
 * @method Doctrine_Collection getArtCategories() Returns the current record's "ArtCategories" collection
 * @method Doctrine_Collection getArticles()      Returns the current record's "Articles" collection
 * @method Doctrine_Collection getGalleries()     Returns the current record's "Galleries" collection
 * @method Doctrine_Collection getCategory()      Returns the current record's "Category" collection
 * @method Doctrine_Collection getCompany()       Returns the current record's "Company" collection
 * @method Metas               setMetaId()        Sets the current record's "meta_id" value
 * @method Metas               setIsDefault()     Sets the current record's "is_default" value
 * @method Metas               setGenerate()      Sets the current record's "generate" value
 * @method Metas               setTitle()         Sets the current record's "title" value
 * @method Metas               setDescription()   Sets the current record's "description" value
 * @method Metas               setKeywords()      Sets the current record's "keywords" value
 * @method Metas               setCopyright()     Sets the current record's "copyright" value
 * @method Metas               setAuthor()        Sets the current record's "author" value
 * @method Metas               setEmail()         Sets the current record's "email" value
 * @method Metas               setDistribution()  Sets the current record's "distribution" value
 * @method Metas               setRating()        Sets the current record's "rating" value
 * @method Metas               setRobots()        Sets the current record's "robots" value
 * @method Metas               setRevisitafter()  Sets the current record's "revisitafter" value
 * @method Metas               setExpires()       Sets the current record's "expires" value
 * @method Metas               setArtCategories() Sets the current record's "ArtCategories" collection
 * @method Metas               setArticles()      Sets the current record's "Articles" collection
 * @method Metas               setGalleries()     Sets the current record's "Galleries" collection
 * @method Metas               setCategory()      Sets the current record's "Category" collection
 * @method Metas               setCompany()       Sets the current record's "Company" collection
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMetas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_metas');
        $this->hasColumn('meta_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('is_default', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('generate', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('keywords', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('copyright', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('author', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('distribution', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('rating', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('robots', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('revisitafter', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('expires', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ArtCategories', array(
             'local' => 'meta_id',
             'foreign' => 'meta_id'));

        $this->hasMany('Articles', array(
             'local' => 'meta_id',
             'foreign' => 'meta_id'));

        $this->hasMany('Galleries', array(
             'local' => 'meta_id',
             'foreign' => 'meta_id'));

        $this->hasMany('Category', array(
             'local' => 'meta_id',
             'foreign' => 'meta_id'));

        $this->hasMany('Company', array(
             'local' => 'meta_id',
             'foreign' => 'meta_id'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'tableName' => 'of_metas_translation',
             'fields' => 
             array(
              0 => 'generate',
              1 => 'title',
              2 => 'description',
              3 => 'keywords',
              4 => 'copyright',
              5 => 'author',
              6 => 'email',
              7 => 'distribution',
              8 => 'rating',
              9 => 'robots',
              10 => 'revisitafter',
              11 => 'expires',
             ),
             ));
        $this->actAs($i18n0);
    }
}