<?php

/**
 * BaseMenus
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $title
 * @property string $menu_key
 * @property string $lang
 * @property string $url
 * @property string $target
 * @property string $route
 * @property string $model
 * @property integer $object
 * @property string $cssclass
 * @property integer $user_banner_id
 * @property boolean $is_active
 * @property UserBanners $UserBanners
 * 
 * @method string      getName()           Returns the current record's "name" value
 * @method string      getTitle()          Returns the current record's "title" value
 * @method string      getMenuKey()        Returns the current record's "menu_key" value
 * @method string      getLang()           Returns the current record's "lang" value
 * @method string      getUrl()            Returns the current record's "url" value
 * @method string      getTarget()         Returns the current record's "target" value
 * @method string      getRoute()          Returns the current record's "route" value
 * @method string      getModel()          Returns the current record's "model" value
 * @method integer     getObject()         Returns the current record's "object" value
 * @method string      getCssclass()       Returns the current record's "cssclass" value
 * @method integer     getUserBannerId()   Returns the current record's "user_banner_id" value
 * @method boolean     getIsActive()       Returns the current record's "is_active" value
 * @method UserBanners getUserBanners()    Returns the current record's "UserBanners" value
 * @method Menus       setName()           Sets the current record's "name" value
 * @method Menus       setTitle()          Sets the current record's "title" value
 * @method Menus       setMenuKey()        Sets the current record's "menu_key" value
 * @method Menus       setLang()           Sets the current record's "lang" value
 * @method Menus       setUrl()            Sets the current record's "url" value
 * @method Menus       setTarget()         Sets the current record's "target" value
 * @method Menus       setRoute()          Sets the current record's "route" value
 * @method Menus       setModel()          Sets the current record's "model" value
 * @method Menus       setObject()         Sets the current record's "object" value
 * @method Menus       setCssclass()       Sets the current record's "cssclass" value
 * @method Menus       setUserBannerId()   Sets the current record's "user_banner_id" value
 * @method Menus       setIsActive()       Sets the current record's "is_active" value
 * @method Menus       setUserBanners()    Sets the current record's "UserBanners" value
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMenus extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_menus');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Nazwa linku',
             'length' => 255,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Informacja',
             'length' => 255,
             ));
        $this->hasColumn('menu_key', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('lang', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 512, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'URL',
             'length' => 512,
             ));
        $this->hasColumn('target', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '_self',
             'length' => 50,
             ));
        $this->hasColumn('route', 'string', 512, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'false',
             'length' => 512,
             ));
        $this->hasColumn('model', 'string', 512, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'false',
             'length' => 512,
             ));
        $this->hasColumn('object', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('cssclass', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'empty',
             'length' => 255,
             ));
        $this->hasColumn('user_banner_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserBanners', array(
             'local' => 'user_banner_id',
             'foreign' => 'user_banner_id',
             'onDelete' => 'SET NULL'));

        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             ));
        $this->actAs($nestedset0);
    }
}