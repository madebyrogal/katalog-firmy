<?php

/**
 * BaseGalleries
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $gallery_id
 * @property string $name
 * @property integer $meta_id
 * @property integer $default_picture_id
 * @property boolean $is_deletable
 * @property boolean $is_editable
 * @property boolean $is_lang_active
 * @property Doctrine_Collection $Pictures
 * @property Doctrine_Collection $Articles
 * @property Doctrine_Collection $Comments
 * @property Metas $Metas
 * @property Company $Company
 * @property Pictures $DefaultPicture
 * @property Doctrine_Collection $ArtCategories
 * @property Doctrine_Collection $ArticleGallery
 * @property Doctrine_Collection $GalleryComment
 * 
 * @method integer             getGalleryId()          Returns the current record's "gallery_id" value
 * @method string              getName()               Returns the current record's "name" value
 * @method integer             getMetaId()             Returns the current record's "meta_id" value
 * @method integer             getDefaultPictureId()   Returns the current record's "default_picture_id" value
 * @method boolean             getIsDeletable()        Returns the current record's "is_deletable" value
 * @method boolean             getIsEditable()         Returns the current record's "is_editable" value
 * @method boolean             getIsLangActive()       Returns the current record's "is_lang_active" value
 * @method Doctrine_Collection getPictures()           Returns the current record's "Pictures" collection
 * @method Doctrine_Collection getArticles()           Returns the current record's "Articles" collection
 * @method Doctrine_Collection getComments()           Returns the current record's "Comments" collection
 * @method Metas               getMetas()              Returns the current record's "Metas" value
 * @method Company             getCompany()            Returns the current record's "Company" value
 * @method Pictures            getDefaultPicture()     Returns the current record's "DefaultPicture" value
 * @method Doctrine_Collection getArtCategories()      Returns the current record's "ArtCategories" collection
 * @method Doctrine_Collection getArticleGallery()     Returns the current record's "ArticleGallery" collection
 * @method Doctrine_Collection getGalleryComment()     Returns the current record's "GalleryComment" collection
 * @method Galleries           setGalleryId()          Sets the current record's "gallery_id" value
 * @method Galleries           setName()               Sets the current record's "name" value
 * @method Galleries           setMetaId()             Sets the current record's "meta_id" value
 * @method Galleries           setDefaultPictureId()   Sets the current record's "default_picture_id" value
 * @method Galleries           setIsDeletable()        Sets the current record's "is_deletable" value
 * @method Galleries           setIsEditable()         Sets the current record's "is_editable" value
 * @method Galleries           setIsLangActive()       Sets the current record's "is_lang_active" value
 * @method Galleries           setPictures()           Sets the current record's "Pictures" collection
 * @method Galleries           setArticles()           Sets the current record's "Articles" collection
 * @method Galleries           setComments()           Sets the current record's "Comments" collection
 * @method Galleries           setMetas()              Sets the current record's "Metas" value
 * @method Galleries           setCompany()            Sets the current record's "Company" value
 * @method Galleries           setDefaultPicture()     Sets the current record's "DefaultPicture" value
 * @method Galleries           setArtCategories()      Sets the current record's "ArtCategories" collection
 * @method Galleries           setArticleGallery()     Sets the current record's "ArticleGallery" collection
 * @method Galleries           setGalleryComment()     Sets the current record's "GalleryComment" collection
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGalleries extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_galleries');
        $this->hasColumn('gallery_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Nazwa galerii',
             'length' => 255,
             ));
        $this->hasColumn('meta_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('default_picture_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'unique' => true,
             ));
        $this->hasColumn('is_deletable', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('is_editable', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('is_lang_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Pictures', array(
             'local' => 'gallery_id',
             'foreign' => 'gallery_id'));

        $this->hasMany('Articles', array(
             'refClass' => 'ArticleGallery',
             'local' => 'gallery_id',
             'foreign' => 'article_id'));

        $this->hasMany('Comments', array(
             'refClass' => 'CommentGallery',
             'local' => 'gallery_id',
             'foreign' => 'comment_id'));

        $this->hasOne('Metas', array(
             'local' => 'meta_id',
             'foreign' => 'meta_id'));

        $this->hasOne('Company', array(
             'local' => 'gallery_id',
             'foreign' => 'gallery_id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Pictures as DefaultPicture', array(
             'local' => 'default_picture_id',
             'foreign' => 'picture_id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('ArtCategories', array(
             'local' => 'gallery_id',
             'foreign' => 'gallery_id'));

        $this->hasMany('ArticleGallery', array(
             'local' => 'gallery_id',
             'foreign' => 'gallery_id'));

        $this->hasMany('CommentGallery as GalleryComment', array(
             'local' => 'gallery_id',
             'foreign' => 'gallery_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'tableName' => 'of_galleries_translation',
             'fields' => 
             array(
              0 => 'name',
              1 => 'is_lang_active',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'unique' => true,
             'canUpdate' => true,
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'name',
             ),
             'indexName' => 'galleries_slug',
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}