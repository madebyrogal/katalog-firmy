<?php

/**
 * BaseArtCategories
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $artcategory_id
 * @property string $tree_key
 * @property string $name
 * @property clob $description
 * @property boolean $is_public
 * @property boolean $is_deletable
 * @property boolean $is_editable
 * @property integer $meta_id
 * @property boolean $is_lang_active
 * @property string $record_key
 * @property integer $gallery_id
 * @property Doctrine_Collection $Articles
 * @property Doctrine_Collection $ExtraArticles
 * @property Metas $Metas
 * @property Galleries $Galleries
 * @property Doctrine_Collection $ArticleCustomFields
 * @property Doctrine_Collection $ArticleCustomField
 * @property Doctrine_Collection $ArticleCustomFields2ArtCategories
 * @property Doctrine_Collection $Articles2ArtCategories
 * 
 * @method integer             getArtcategoryId()                     Returns the current record's "artcategory_id" value
 * @method string              getTreeKey()                           Returns the current record's "tree_key" value
 * @method string              getName()                              Returns the current record's "name" value
 * @method clob                getDescription()                       Returns the current record's "description" value
 * @method boolean             getIsPublic()                          Returns the current record's "is_public" value
 * @method boolean             getIsDeletable()                       Returns the current record's "is_deletable" value
 * @method boolean             getIsEditable()                        Returns the current record's "is_editable" value
 * @method integer             getMetaId()                            Returns the current record's "meta_id" value
 * @method boolean             getIsLangActive()                      Returns the current record's "is_lang_active" value
 * @method string              getRecordKey()                         Returns the current record's "record_key" value
 * @method integer             getGalleryId()                         Returns the current record's "gallery_id" value
 * @method Doctrine_Collection getArticles()                          Returns the current record's "Articles" collection
 * @method Doctrine_Collection getExtraArticles()                     Returns the current record's "ExtraArticles" collection
 * @method Metas               getMetas()                             Returns the current record's "Metas" value
 * @method Galleries           getGalleries()                         Returns the current record's "Galleries" value
 * @method Doctrine_Collection getArticleCustomFields()               Returns the current record's "ArticleCustomFields" collection
 * @method Doctrine_Collection getArticleCustomField()                Returns the current record's "ArticleCustomField" collection
 * @method Doctrine_Collection getArticleCustomFields2ArtCategories() Returns the current record's "ArticleCustomFields2ArtCategories" collection
 * @method Doctrine_Collection getArticles2ArtCategories()            Returns the current record's "Articles2ArtCategories" collection
 * @method ArtCategories       setArtcategoryId()                     Sets the current record's "artcategory_id" value
 * @method ArtCategories       setTreeKey()                           Sets the current record's "tree_key" value
 * @method ArtCategories       setName()                              Sets the current record's "name" value
 * @method ArtCategories       setDescription()                       Sets the current record's "description" value
 * @method ArtCategories       setIsPublic()                          Sets the current record's "is_public" value
 * @method ArtCategories       setIsDeletable()                       Sets the current record's "is_deletable" value
 * @method ArtCategories       setIsEditable()                        Sets the current record's "is_editable" value
 * @method ArtCategories       setMetaId()                            Sets the current record's "meta_id" value
 * @method ArtCategories       setIsLangActive()                      Sets the current record's "is_lang_active" value
 * @method ArtCategories       setRecordKey()                         Sets the current record's "record_key" value
 * @method ArtCategories       setGalleryId()                         Sets the current record's "gallery_id" value
 * @method ArtCategories       setArticles()                          Sets the current record's "Articles" collection
 * @method ArtCategories       setExtraArticles()                     Sets the current record's "ExtraArticles" collection
 * @method ArtCategories       setMetas()                             Sets the current record's "Metas" value
 * @method ArtCategories       setGalleries()                         Sets the current record's "Galleries" value
 * @method ArtCategories       setArticleCustomFields()               Sets the current record's "ArticleCustomFields" collection
 * @method ArtCategories       setArticleCustomField()                Sets the current record's "ArticleCustomField" collection
 * @method ArtCategories       setArticleCustomFields2ArtCategories() Sets the current record's "ArticleCustomFields2ArtCategories" collection
 * @method ArtCategories       setArticles2ArtCategories()            Sets the current record's "Articles2ArtCategories" collection
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArtCategories extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_artcategories');
        $this->hasColumn('artcategory_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('tree_key', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Nazwa kategorii',
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', 65532, array(
             'type' => 'clob',
             'notnull' => true,
             'default' => '',
             'length' => 65532,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('is_deletable', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('is_editable', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('meta_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('is_lang_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('record_key', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'unique' => false,
             'length' => 255,
             ));
        $this->hasColumn('gallery_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Articles', array(
             'local' => 'artcategory_id',
             'foreign' => 'artcategory_id'));

        $this->hasMany('Articles as ExtraArticles', array(
             'refClass' => 'Articles2ArtCategories',
             'local' => 'artcategory_id',
             'foreign' => 'article_id'));

        $this->hasOne('Metas', array(
             'local' => 'meta_id',
             'foreign' => 'meta_id'));

        $this->hasOne('Galleries', array(
             'local' => 'gallery_id',
             'foreign' => 'gallery_id'));

        $this->hasMany('ArticleCustomField as ArticleCustomFields', array(
             'refClass' => 'ArticleCustomFields2ArtCategories',
             'local' => 'artcategory_id',
             'foreign' => 'field_id'));

        $this->hasMany('ArticleCustomField', array(
             'refClass' => 'ArticleCustomFields2ArtCategories',
             'local' => 'artcategory_id',
             'foreign' => 'id'));

        $this->hasMany('ArticleCustomFields2ArtCategories', array(
             'local' => 'artcategory_id',
             'foreign' => 'artcategory_id'));

        $this->hasMany('Articles2ArtCategories', array(
             'local' => 'artcategory_id',
             'foreign' => 'artcategory_id'));

        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             ));
        $i18n0 = new Doctrine_Template_I18n(array(
             'tableName' => 'of_artcategories_translation',
             'fields' => 
             array(
              0 => 'name',
              1 => 'description',
              2 => 'is_lang_active',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'unique' => true,
             'canUpdate' => true,
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'name',
             ),
             'indexName' => 'artcategories_slug',
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($nestedset0);
        $this->actAs($i18n0);
    }
}