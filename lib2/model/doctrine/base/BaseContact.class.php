<?php

/**
 * BaseContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $contact_id
 * @property string $message_title
 * @property clob $address
 * @property clob $map_address
 * @property clob $map_localization
 * @property string $form_email
 * @property boolean $has_captcha
 * 
 * @method integer getContactId()        Returns the current record's "contact_id" value
 * @method string  getMessageTitle()     Returns the current record's "message_title" value
 * @method clob    getAddress()          Returns the current record's "address" value
 * @method clob    getMapAddress()       Returns the current record's "map_address" value
 * @method clob    getMapLocalization()  Returns the current record's "map_localization" value
 * @method string  getFormEmail()        Returns the current record's "form_email" value
 * @method boolean getHasCaptcha()       Returns the current record's "has_captcha" value
 * @method Contact setContactId()        Sets the current record's "contact_id" value
 * @method Contact setMessageTitle()     Sets the current record's "message_title" value
 * @method Contact setAddress()          Sets the current record's "address" value
 * @method Contact setMapAddress()       Sets the current record's "map_address" value
 * @method Contact setMapLocalization()  Sets the current record's "map_localization" value
 * @method Contact setFormEmail()        Sets the current record's "form_email" value
 * @method Contact setHasCaptcha()       Sets the current record's "has_captcha" value
 * 
 * @package    sell4
 * @subpackage model
 * @author     Wojciech Piestrak <wojtek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('of_contact');
        $this->hasColumn('contact_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('message_title', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'default' => 'Tytuł e-maila',
             'length' => 255,
             ));
        $this->hasColumn('address', 'clob', 65532, array(
             'type' => 'clob',
             'notnull' => false,
             'default' => 'Dane teleadresowe',
             'length' => 65532,
             ));
        $this->hasColumn('map_address', 'clob', 65532, array(
             'type' => 'clob',
             'notnull' => false,
             'default' => 'Dane teleadresowe',
             'length' => 65532,
             ));
        $this->hasColumn('map_localization', 'clob', 65532, array(
             'type' => 'clob',
             'notnull' => false,
             'length' => 65532,
             ));
        $this->hasColumn('form_email', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'default' => 'Adres e-mail na który mają przychodzić wiadomości',
             'length' => 255,
             ));
        $this->hasColumn('has_captcha', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $i18n0 = new Doctrine_Template_I18n(array(
             'tableName' => 'of_contact_translation',
             'fields' => 
             array(
              0 => 'address',
              1 => 'form_email',
              2 => 'message_title',
              3 => 'map_address',
              4 => 'map_localization',
             ),
             ));
        $this->actAs($i18n0);
    }
}