<?php

/**
 * GalleriesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class GalleriesTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object GalleriesTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Galleries');
    }

    public function getWithPictures()
    {
        $q = $this->createQuery()
            ->from('Galleries g')
            ->leftJoin('g.Pictures p')
            ->orderBy('p.created_at ASC');
        return $q->execute();
    }

    public function getOnpageGalleries()
    {
        $q = Doctrine_Query::create()
            ->from('Galleries g')
            ->where('g.is_editable =?', true)
//            ->orderBy('g.name')
            ;
        return $q->execute();
    }


    public function getOptionsList()
    {
//      $galleries = $this->getAllQuery()->execute();
      $galleries = $this->retrieveEditable($this->createQuery())->execute();
      $return = array();
      foreach($galleries as $gallery)
      {
        $return[$gallery->getPrimaryKey()] = $gallery->__toString();
      }
      return $return;
    }

    public function getAllQuery()
    {
      return $this->createQuery();
    }

    public function doSelectForSlug($parameters)
    {
            return $this->findOneBySlugAndCulture($parameters['slug'], $parameters['sf_culture']);
    }

    public function findOneBySlugAndCulture($slug, $culture = 'pl')
    {
            $q = $this->createQuery('a')
                    ->leftJoin('a.Translation t')
                    ->andWhere('t.lang = ?', $culture)
                    ->andWhere('t.slug = ?', $slug);
            return $q->fetchOne();
    }


    public function getEditable()
    {
        $q = $this->createQuery('g')
                  ->addWhere('g.is_editable = ?', true); //żeby nie edytować galerii, które są przypisane do produktu

        return $q->execute();
    }

    public function getProductGalleriesIds()
    {
        $q = $this->createQuery()
            ->select('p.gallery_id')
            ->from('Product p')
            ->where('p.gallery_id IS NOT NULL')
            ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
            ;
        $return = array();
        foreach ($result = $q->execute() as $item) {
          $return [] = $item['gallery_id'];
        }

        return $return;
    }


    public function retrieveEditable(Doctrine_Query $q)
    {
        $rootAlias = $q->getRootAlias();
        $q->addWhere($rootAlias . '.is_editable = ?', true);
        $q->leftJoin($rootAlias . '.Translation t');

        return $q;
    }

}