<?php

/**
 * Menus
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    stgcms2
 * @subpackage model
 * @author     Jerzy Biernacki <jurek@studiotg.pl>, Paweł Sałajczyk <pawel@studiotg.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Menus extends BaseMenus implements StgTreDoctrineRecordInterface
{
    static public function clearMenuIfNeeded($object)
    {
        $menus = Doctrine_Query::create()->from('Menus m')
        ->where('m.model = ?',get_class($object))
        ->andWhere('m.object = ?',$object->getPrimaryKey())
        ->execute();

        if(!empty($menus))
        {
            foreach($menus as $menu_item)
            {
                $menu_item->setUrl('#404');
                $menu_item->setTarget('_self');
                $menu_item->setRoute('false');
                $menu_item->setModel('false');
                $menu_item->setObject(0);
                $menu_item->save();
            }
        }
    }

    /**
     * Ta metoda jest po to, żeby ograniczyć zapytania, które powstają przy getNode()->hasChildren()
     */
    public function hasChildren() {
      return $this->getRgt() - $this->getLft() > 1;
    }

    public function getRootLang() {
      if ($this->isNew()) {
        return null;
      }
      else {
        return $this->getTable()->find($this->getRootId())->getLang();
      }
    }

    public function getName()
    {
      $lang_string = '';
      if (stgConfig::get('translations_enabled') && !$this->isNew() && !$this->getLevel() > 0) {
        $lang_string = '['.$this->getLang().'] ';
      }

      return $lang_string . $this->_get('name');
    }

    public function __toString()
    {
        return $this->getName();
    }

    public function isEditableRoot()
    {
      if ($this->getLevel() == 0) {
        return $this->getIsActive() && Lang::checkIsNotDeleted($this->getLang());
      }
      return false;
    }

    public function getIndentedName()
    {
        return str_repeat('- ',$this->getLevel()).' '.$this->getName();
    }

    public function save(Doctrine_Connection $conn = null)
    {
        T::cc('frontend');
        return parent::save($conn);
    }

    public function delete(Doctrine_Connection $conn = null)
    {
        T::cc('frontend');
        return parent::delete($conn);
    }
}
