<?php

/**
 * sfGuardUserTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUserTable extends PluginsfGuardUserTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object sfGuardUserTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('sfGuardUser');
    }

    public function queryShowable()
    {
        $q = $this->createQuery('u')
            ->leftJoin('u.Profile profile')
            ->leftJoin('profile.DefaultInvoiceAddress dia')
            ->orderBy('u.id');
                

        if (! $is_super_admin = sfContext::getInstance()->getUser()->getGuardUser()->getIsSuperAdmin()) {
          if ($string = stgConfig::get('sf_guard_user_not_showable')) {
            $q->andWhereNotIn('u.username', explode(',', $string));
          }
        }
        return $q;
    }

//    public function retrieveByUsername($value) {
//      return $this->findOneByUsername($value);
//    }

    public function getFieldValuesArray($field, $prefix = '', $suffix = '') {
      $return = array();
      $users = $this->createQuery()
                  ->select($field)
                  ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
                  ->execute();
      foreach ($users as $user) {
        if ($user[$field]) {
          $return[] = $prefix.$user[$field].$suffix;
        }
      }
      return $return;
    }

    public function getUsersArrayByUsernamesArray($usernames) {
      $users = $this->createQuery()
              ->andWhereIn('username', $usernames)
              ->execute();

      $users_array = array();
      foreach ($users as $user) {
        $users_array[$user->getUsername()] = $user;
      }

      return $users_array;
    }

}